version: "3.8"
services:

    # PHP Service
    php:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8000:8000
        depends_on:
            - database-mysql
            - database-mongo
            - redis

    # Database Server
    database-mysql:
        image: mysql:8.0
        ports:
            -   3306:3306
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - db-data:/var/lib/mysql

    database-mongo:
        image: mongo:5.0
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${DB_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
        restart: unless-stopped
        ports:
        - "27017:27017"
        volumes:
        - ./database/mongodb/db:/data/db
        - ./database/mongodb/dev.archive:/Databases/dev.archive
        - ./database/mongodb/production:/Databases/production
        command: [--auth]

    # Redis Server
    redis:
        image: redis:alpine
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
            - 6379:6379

    # Queue Server
    queue:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=queue
        working_dir: /var/www
        volumes:
            - ./:/var/www

    # Node Server
    node:
        build:
            context: .
            target: node
        volumes:
            - .:/usr/src
            - ./node_modules:/usr/src/node_modules
        tty: true

volumes:
  db-data: ~
